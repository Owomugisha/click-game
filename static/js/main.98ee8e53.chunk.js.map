{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","id","alt","name","src","image","occupation","location","Wrapper","children","Header","style","display","justifyContent","alignItems","backgroundColor","color","result","marginRight","score","topScore","shuffleArray","i","length","j","Math","floor","random","_ref","App","state","friends","currentScore","clicked","gameOver","_this","clickedPlayer","newScramble","setState","console","log","concat","includes","resetGame","pointIncrease","push","resetIconArray","points","this","_this2","Fragment","components_Header","components_Wrapper","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.98ee8e53.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction FriendCard(props) {\r\n  return (\r\n    <div className=\"card\" onClick={() => props.onClick(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>\r\n            <strong>Name:</strong> {props.name}\r\n          </li>\r\n          <li>\r\n            <strong>Occupation:</strong> {props.occupation}\r\n          </li>\r\n          <li>\r\n            <strong>Location:</strong> {props.location}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {/* <span onClick={() => props.onClick(props.id)} className=\"remove\"></span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', backgroundColor:'darkblue' }}>\r\n      <div>\r\n        <h1 style={{color:'white'}}>{props.children}</h1>\r\n      </div>\r\n      <div>\r\n        <p style={{color:'white'}}>{props.result}</p>\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n        <p style={{ marginRight: 10, color:'white' }}>Score: {props.score}</p>\r\n        <p style={{color:'white'}}>Top Score: {props.topScore}</p>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport friends from \"./friends.json\";\n\n// const shuffleArray = (array) => {\n//   let counter = array.length;\n//   //while there are elements in the array\n//   while (counter > 0) {\n//     let index = Math.floor(Math.random() * counter);\n//     counter--;\n//     let temp = array[counter];\n//     array[counter] = array[index];\n//     array[index] = temp;\n//   }\n//   return array;\n// }\n\nconst shuffleArray = a => {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    currentScore: 0,\n    topScore: 0,\n    result: \"\",\n    clicked: [],\n    gameOver: false\n  };\n\n  // onClick = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends })\n  // }; \n\n  onClick = id => {\n    // if (this.state.clicked.indexOf(id) === -1) {\n    //   console.log(this.state.clicked.indexOf(id))\n    //   // it has not been clicked\n    //   let clickedId = this.state.clicked;\n    //   clickedId.push(id);\n    //   this.setState({ \n    //     clicked: clickedId \n    //   })\n\n    // } else {\n    //   //it has already been clicked\n    // };\n\n    this.clickedPlayer(id);\n    let newScramble = shuffleArray(friends);\n    this.setState({ friends: newScramble })\n  };\n\n\n\n\n  componentDidMount() {\n    this.setState({ result: \"Click on the picture to play\" })\n  }\n  clickedPlayer = (id) => {\n    console.log(`Picture clicked with id: ${id}`);\n    if (!this.state.clicked.includes(id)) {\n      this.pointIncrease();\n      this.state.clicked.push(id);\n      this.setState({\n        gameOver: false\n      });\n    } else {\n      this.resetGame();\n    }\n  }\n  pointIncrease = () => {\n    let score = this.state.currentScore + 1;\n    console.log(`the score is ${score}`);\n    if (score === this.state.friends.length) {\n      this.setState({\n        result: \"You win! Start clicking to play again!\",\n        topScore: score,\n        currentScore: 0,\n        clicked: [],\n        friends,\n        gameOver: false\n      });\n    } else if (score > this.state.topScore) {\n      this.setState({\n        topScore: score,\n        currentScore: score,\n        result: \"Correct! New high score!\"\n      });\n    } else {\n      this.setState({\n        currentScore: score,\n        result: \"Correct!\"\n      })\n    }\n    this.resetIconArray();\n  }\n\n  resetGame = () => {\n    this.setState({\n      points: 0,\n      currentScore: 0,\n      topScore: this.state.topScore,\n      result: \"You Loss!\",\n      clicked: [],\n      friends,\n      gameOver: true\n    });\n    this.resetIconArray();\n  }\n  resetIconArray = () => {\n    let newScramble = shuffleArray(friends);\n    this.setState({ friends: newScramble })\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <React.Fragment>\n        <Header score={this.state.currentScore} topScore={this.state.topScore} result={this.state.result}>Clicky Game</Header>\n        <Wrapper>\n          {this.state.friends.map(friend => (\n            <FriendCard\n              onClick={this.onClick}\n              id={friend.id}\n              key={friend.id}\n              name={friend.name}\n              image={friend.image}\n              occupation={friend.occupation}\n              location={friend.location}\n              shuffleArray={this.shuffleArray}\n            />\n          ))}\n\n\n        </Wrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}